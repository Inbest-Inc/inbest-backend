spring.application.name=backend
springdoc.swagger-ui.path=/swagger-ui.html

#1.8 migration'u sorun çıkardığından backend'e deploy almak için
spring.flyway.out-of-order=true

# AWS EC2 PostgreSQL ba?lant? ayarlar?
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Flyway migration (opsiyonel)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.user=${POSTGRES_USER}
spring.flyway.password=${POSTGRES_PASSWORD}

#smpt
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${USER_EMAIL}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#s3

#s3
aws.s3.bucketName=${BUCKET_NAME}
aws.s3.accessKey=${BUCKET_ACCESS_KEY}
aws.s3.secretKey=${BUCKET_SECRET_KEY}
